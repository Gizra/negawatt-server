<?php
/**
 * @file
 * Code for the IEC feature.
 */

include_once 'iec.features.inc';

/**
 * Implements hook_node_presave().
 *
 * Find if there is already an IEC meter with the same contract ID, and if so reference the newly created one, with
 * the original one, which always has the lowest node ID.
 */
function iec_node_presave($node) {
  if (!empty($node->nid)) {
    // Node is already saved.
    return;
  }

  if ($node->type != 'iec_meter') {
    return;
  }

  $wrapper = entity_metadata_wrapper('node', $node);

  if ($wrapper->field_parent_contract->value()) {
    // Parent is already populated.
    return;
  }

  $contract_id = $wrapper->field_contract_id->value();

  $query = new EntityFieldQuery();
  $result = $query
    ->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'iec_meter')
    ->propertyCondition('status', NODE_PUBLISHED)
    ->fieldCondition('field_contract_id', 'value', $contract_id)
    ->propertyOrderBy('nid', 'ASC')
    ->range(0, 1)
    ->execute();

  if (empty($result['node'])) {
    // This is the first contract ID saved.
    return;
  }

  $nid = key($result['node']);
  $wrapper->field_parent_contract->set($nid);
}
